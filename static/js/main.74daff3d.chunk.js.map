{"version":3,"sources":["components/NewNote.js","components/Note.js","components/SearchNotes.js","components/Loading.js","components/ListNotes.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["NewNote","state","customerName","orderNumber","issue","stepsTaken","date","handleChanges","bind","saveNote","event","target","value","name","this","setState","preventDefault","Date","current_time","getMonth","getDate","getFullYear","console","log","new_note","props","addNote","toggleDisplay","className","aptBtnDisplay","onClick","formDisplay","noValidate","onSubmit","e","displayNotification","onChange","type","id","rows","cols","Component","Note","isEditing","editableNote","toggleisEditing","cancelChanges","saveChanges","element","document","getElementById","select","setSelectionRange","execCommand","note","editNote","noteData","showDeleteBtn","deleteNote","readOnly","copyText","SearchNotes","placeholder","searchNotes","Loading","class","ListNotes","toggleDeleteBtn","isLoading","listDisplay","toggleList","fetchNotes","notes","map","noteId","Nav","useAuth0","user","logout","App","lastIndex","queryText","fetch","then","response","json","data","index","temp_notes","unshift","method","body","JSON","stringify","headers","url","concat","text","store","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","auth0","isAuthenticated","loginWithRedirect","filteredNotes","filter","toLowerCase","includes","sort","a","b","withAuth0","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","process","clientId","redirectUri"],"mappings":"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","file":"static/js/main.74daff3d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass NewNote extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customerName: '',\r\n            orderNumber: '',\r\n            issue: '',\r\n            stepsTaken: '',\r\n            date: ''\r\n        }\r\n\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.saveNote = this.saveNote.bind(this);\r\n    }\r\n\r\n    handleChanges(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    saveNote(event) {\r\n        event.preventDefault();\r\n\r\n        var date = new Date();\r\n        let current_time = (date.getMonth() + 1) + '-' + date.getDate() + '-' + date.getFullYear();\r\n        console.log(current_time);\r\n        let new_note = {\r\n            customerName: this.state.customerName,\r\n            orderNumber: this.state.orderNumber,\r\n            issue: this.state.issue,\r\n            stepsTaken: this.state.stepsTaken,\r\n            date: current_time\r\n        }\r\n\r\n        console.log(new_note);\r\n\r\n        this.props.addNote(new_note);\r\n\r\n        this.setState({\r\n            customerName: '',\r\n            orderNumber: '',\r\n            issue: '',\r\n            stepsTaken: '',\r\n            date: ''\r\n        })\r\n\r\n        this.props.toggleDisplay();\r\n    }\r\n\r\n    render() {\r\n        return (<article className=\"\">\r\n            <div className=\"d-flex justify-content-end mr-5\">\r\n                <button className={\r\n                        \"layout-dropdown btn btn-success btn-lg \" + (\r\n                        this.props.aptBtnDisplay ? '' : 'hidden'\r\n                    )\r\n                    }\r\n                    onClick={this.props.toggleDisplay}>\r\n                    <h5>\r\n                        New Note <i className=\"fas fa-plus-circle ml-1\"></i>\r\n                    </h5>\r\n                </button>\r\n            </div>\r\n\r\n            <div className={\r\n                \"container \" + (\r\n                this.props.formDisplay ? '' : 'hidden'\r\n            )\r\n            }>\r\n                <div className=\"row justify-content-center \">\r\n                    <section className=\"col-sm-12 col-md-10 new-note-layout\">\r\n                        <div className=\"card-header text-center\">\r\n                            <h5>New Note</h5>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n\r\n                            <form className=\"appointment-form\" noValidate\r\n                                onSubmit={e => {\r\n                                    this.saveNote(e);\r\n                                    this.props.displayNotification('note-added');\r\n                                }}>\r\n\r\n                                <div className=\"form-group form-row\">\r\n                                    <label className=\"col-form-label\">Customer Name:</label>\r\n                                    <div className=\"col-md-3 col-sm-5\">\r\n                                        <input onChange={\r\n                                                this.handleChanges\r\n                                            }\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"customerName\"\r\n                                            id=\"customerName\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-row\">\r\n                                    <label className=\"col-form-label\">Order number:</label>\r\n                                    <div className=\"col-md-3 col-sm-5\">\r\n                                        <input onChange={\r\n                                                this.handleChanges\r\n                                            }\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"orderNumber\"\r\n                                            id=\"orderNumber\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-row\">\r\n                                    <label className=\"col-form-label\">Issue:\r\n                                    </label>\r\n                                    <div>\r\n                                        <textarea onChange={\r\n                                                this.handleChanges\r\n                                            }\r\n                                            className=\"form-control\"\r\n                                            rows=\"4\"\r\n                                            cols=\"70\"\r\n                                            name=\"issue\"\r\n                                            id=\"issue\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-row\">\r\n                                    <label className=\"col-form-label\">Steps Taken:\r\n                                    </label>\r\n                                    <div>\r\n                                        <textarea onChange={\r\n                                                this.handleChanges\r\n                                            }\r\n                                            className=\"form-control\"\r\n                                            rows=\"4\"\r\n                                            cols=\"70\"\r\n                                            name=\"stepsTaken\"\r\n                                            id=\"stepsTaken\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-row justify-content-center\">\r\n                                    <button className=\"btn btn-danger mx-3\"\r\n                                        onClick={\r\n                                            this.props.toggleDisplay\r\n                                        }\r\n                                        type=\"reset\">Cancel</button>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </article>)\r\n\r\n    }\r\n}\r\n\r\nexport default NewNote;\r\n","import React, { Component } from 'react';\r\n\r\nclass Note extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isEditing: false,\r\n            editableNote: {}\r\n        }\r\n\r\n        this.toggleisEditing = this.toggleisEditing.bind(this);\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.cancelChanges = this.cancelChanges.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n    }\r\n\r\n    toggleisEditing() {\r\n        this.setState({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    handleChanges(event) {\r\n        let target = event.target;\r\n        let value = target.value;\r\n        let name = target.name;\r\n\r\n        let new_note = this.state.editableNote;\r\n        new_note[name] = value;\r\n        \r\n        this.setState({\r\n            editableNote: new_note\r\n        })\r\n    }\r\n\r\n    copyText(id) {\r\n        let element = document.getElementById(\"steps-\" + id);\r\n        element.select();\r\n        element.setSelectionRange(0, 99999)\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    cancelChanges() {\r\n        this.setState({\r\n            editableNote: this.props.note\r\n        })\r\n        console.log('Canceled changes');\r\n        console.log(this.props.note);\r\n        this.toggleisEditing();\r\n        \r\n    }\r\n\r\n    saveChanges() {\r\n        console.log('changes saved');\r\n        this.toggleisEditing();\r\n        this.props.editNote(this.state.editableNote);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let noteData = this.props.note;\r\n        this.setState({\r\n            editableNote: noteData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"note-layout row py-3 col-12\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"note-head d-flex mb-3\">\r\n                        <h6 className=\"customer-name\"> \r\n                            {this.props.note.customerName}\r\n                        </h6>\r\n                        <span className=\"note-date ml-auto font-italic\">\r\n                            {this.props.note.date}\r\n                        </span>\r\n                        <button className={\"btn btn-danger btn-small ml-2 \" + (this.props.showDeleteBtn ? '' :'hidden')} \r\n                                onClick={e => {\r\n                                    this.props.deleteNote(this.props.note)\r\n                                    this.props.displayNotification('note-deleted')\r\n                                    }} >\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                        </button> \r\n                    </div>\r\n                    \r\n                    <div className=\"order-number d-flex mb-3\">\r\n                        <span className=\"label-item text-secondary\">Order number:  </span>\r\n                        <span>{this.props.note.orderNumber}</span>\r\n                        <i className=\"note-edit-button fas fa-pencil-alt fa-md mt-auto ml-auto\"\r\n                            onClick={this.toggleisEditing}\r\n                            ></i>\r\n                    </div>\r\n\r\n                    <div className=\"order-issue d-flex mb-3\">\r\n                        <span className=\"label-item text-secondary\">Issue:  </span>\r\n                        <textarea \r\n                            type=\"text\"\r\n                            name=\"issue\"\r\n                            value={this.state.editableNote.issue} \r\n                            className=\"form-control w-50 issue-note\" \r\n                            cols=\"70\" \r\n                            rows=\"6\"\r\n                            readOnly={!this.state.isEditing}\r\n                            onChange={this.handleChanges}\r\n                            />\r\n                    </div>\r\n\r\n                    <div className=\"order-steps d-flex mb-3\">\r\n                        <span className=\"label-item text-secondary\">Steps Taken:  </span>\r\n                        <textarea \r\n                            id={\"steps-\" + this.props.note.orderNumber} \r\n                            name=\"stepsTaken\"\r\n                            type=\"text\" value={this.state.editableNote.stepsTaken} \r\n                            className=\"form-control w-50 stepsTaken-note\" \r\n                            cols=\"70\"\r\n                            rows=\"6\"\r\n                            onChange={this.handleChanges}\r\n                            readOnly={!this.state.isEditing}/>\r\n                        <i onClick={e => this.copyText(this.props.note.orderNumber)} className=\"clipboard-button far fa-copy ml-auto fa-lg \"></i>\r\n                    </div>\r\n\r\n                    <div className={\"edit-actions text-center \" + (this.state.isEditing ? '' : ' hidden')}>\r\n                        <button className=\"btn btn-danger mx-3\" onClick={this.cancelChanges}>Cancel</button>\r\n                        <button className=\"btn btn-success\" onClick={this.saveChanges}>Save</button>\r\n                    </div>                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Note;","import React, {Component} from 'react';\r\n\r\nclass SearchNotes extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"input-group ml-2 mt-2\">\r\n                <input type=\"text\" className=\"search-bar form-control\" placeholder=\"Search for...\" onChange={e => this.props.searchNotes(e.target.value)}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchNotes;","import React, {Component} from 'react';\r\nimport '../loading.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex m-auto\">\r\n                <div class=\"cssload-loader mt-5\">\r\n                    <div className=\"cssload-inner cssload-one\"></div>\r\n                    <div className=\"cssload-inner cssload-two\"></div>\r\n                    <div className=\"cssload-inner cssload-three\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\nimport SearchNotes from './SearchNotes';\r\nimport Loading from './Loading';\r\n\r\nclass ListNotes extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showDeleteBtn: false\r\n        }\r\n\r\n        this.toggleDeleteBtn = this.toggleDeleteBtn.bind(this);\r\n    }\r\n\r\n    toggleDeleteBtn() {\r\n        this.setState({\r\n            showDeleteBtn: !this.state.showDeleteBtn\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return <Loading />\r\n        } else {\r\n            return(\r\n                <article className=\"list-appointments-layout py-3 mb-5\">\r\n                    <div className=\"d-flex justify-content-end mr-5\">\r\n                        <button className={\"btn btn-info btn-lg \" + (this.props.listDisplay ? 'hidden' : '')} onClick={this.props.toggleList}>\r\n                            <h5>See Notes <i className=\"far fa-address-book\"></i></h5>\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <section className={\"container card-header \" + (this.props.listDisplay ? '' : 'hidden')}>\r\n                        <div className=\"d-flex bg-secondary\">\r\n                            <div className=\"search-component col-6\">\r\n                                <SearchNotes searchNotes={this.props.searchNotes} />\r\n                            </div>\r\n                            <button className=\"btn btn-info btn-md ml-auto my-2 mr-2\" onClick={this.props.fetchNotes}>\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </button>\r\n                            <button className=\"btn btn-warning btn-sm my-2 mr-2\" onClick={this.toggleDeleteBtn}>\r\n                                <h5 className=\"text-white\"><i className=\"fas fa-user-times\"></i></h5>\r\n                            </button>\r\n                            <button className={\"btn btn-danger my-2 mr-2 \"} onClick={this.props.toggleList}><i className=\"fas fa-times\"></i></button>\r\n                        </div>\r\n    \r\n                        <section className=\"note-list row overflow-auto bg-light card-body\">\r\n                            {\r\n                                this.props.notes.map(note => (\r\n                                    <Note \r\n                                        note={note} \r\n                                        showDeleteBtn={this.state.showDeleteBtn} \r\n                                        deleteNote={this.props.deleteNote}\r\n                                        editNote={this.props.editNote}\r\n                                        key={note.noteId}\r\n                                        displayNotification={this.props.displayNotification}\r\n                                        />\r\n                                ))\r\n                            } \r\n                            \r\n                        </section>\r\n                    </section>\r\n                </article>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default ListNotes;","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport LogOut from './LogOut';\r\n\r\nconst Nav = () => {\r\n    const { user, logout } = useAuth0();\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light mb-5\">\r\n            <span className=\"navbar-brand mb-0 h1\">Welcome, {user.name}</span>\r\n            <button className=\"nav-item btn btn-lg btn-warning text-white ml-auto\"  onClick={() => logout()}>\r\n                Log out\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import './App.css';\nimport React, { Component } from 'react';\nimport NewNote from './components/NewNote';\nimport ListNotes from './components/ListNotes';\nimport LogIn from './components/LogIn';\nimport LogOut from './components/LogOut';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Loading from './components/Loading';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { store } from 'react-notifications-component';\nimport Nav from './components/Nav';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [],\n      lastIndex: 0,\n      formDisplay: true,\n      aptBtnDisplay: false,\n      listDisplay: true,\n      queryText: '',\n      isLoading: true\n    }\n\n    this.fetchNotes = this.fetchNotes.bind(this);\n    this.toggleDisplay = this.toggleDisplay.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.toggleList = this.toggleList.bind(this);\n    this.searchNotes = this.searchNotes.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.editNote = this.editNote.bind(this);\n  }\n\n  fetchNotes() {\n    this.setState({\n      isLoading: true\n    });\n\n    fetch('https://morning-anchorage-80357.herokuapp.com/https://note-taker-api.glitch.me/notes').then(response => {\n      response.json().then(data => {\n        let index = 0;\n        const temp_notes = data.map(note => {\n          note.noteId = index;\n          index += 1;\n          return note;\n        })\n\n        this.setState({ notes: temp_notes, lastIndex: index, isLoading: false });\n        console.log(this.state);\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.fetchNotes();\n  }\n\n  toggleDisplay() {\n    this.setState({\n      formDisplay: !this.state.formDisplay,\n      aptBtnDisplay: !this.state.aptBtnDisplay\n    })\n  }\n\n  addNote(note) {\n    note.noteId = this.state.lastIndex;\n    let temp_notes = this.state.notes;\n    temp_notes.unshift(note);\n\n    this.setState({\n      notes: temp_notes,\n      lastIndex: this.state.lastIndex + 1\n    })\n\n    \n    fetch('https://morning-anchorage-80357.herokuapp.com/https://note-taker-api.glitch.me/new-note', {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n    })\n  }\n\n  deleteNote(note) {\n    let url = 'https://morning-anchorage-80357.herokuapp.com/https://note-taker-api.glitch.me/delete-note?id=';\n    url = url.concat(note.orderNumber);\n  \n    fetch(url, {\n      method: \"POST\"\n    }).then(response => {\n      console.log(response);\n    })\n    this.fetchNotes();\n  }\n\n  editNote(note) {\n    let url = 'https://morning-anchorage-80357.herokuapp.com/https://note-taker-api.glitch.me/edit-note?id=';\n    url = url.concat(note.orderNumber);\n    console.log(note);\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n    }).then(response => {\n      console.log(response);\n    })\n\n    this.fetchNotes();\n  }\n\n  toggleList() {\n    this.setState({\n      listDisplay: !this.state.listDisplay\n    })\n  }\n\n  searchNotes(text){\n    this.setState({\n      queryText: text\n    })\n  }\n\n  displayNotification(type) {\n    switch(type) {\n      case 'note-added':\n        store.addNotification({\n          message: \"Note added successfully.\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 3000,\n            onScreen: true\n          }\n        });\n        break;\n      case 'note-deleted':\n        store.addNotification({\n          message: \"Note deleted successfully.\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 3000,\n            onScreen: true\n          }\n        });\n    }\n    \n  }\n\n\n  render() {\n    const { isAuthenticated, isLoading, loginWithRedirect } = this.props.auth0;\n\n    if(isLoading) {\n      return <Loading />\n    } \n    else if (!isAuthenticated) {\n      return (\n          <>\n            {loginWithRedirect()}\n          </>\n        )\n    } \n    else {\n      // Filter notes using the search query\n      let filteredNotes = this.state.notes;\n      filteredNotes = filteredNotes.filter(note => {\n        return(\n          note['customerName'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n          note['orderNumber'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n          note['issue'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n          note['stepsTaken'].toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n          note['date'].toLowerCase().includes(this.state.queryText.toLowerCase())\n        )\n      })\n\n      // Sort notes by noteId (to display the newest at the top)\n      filteredNotes.sort((a, b) => {\n        return b.noteId - a.noteId; \n      })\n\n      return (\n        <>\n          <ReactNotification />\n          <main className=\"container col-10 mt-5\">\n            <Nav />\n            <NewNote \n              formDisplay={this.state.formDisplay}\n              aptBtnDisplay={this.state.aptBtnDisplay}\n              toggleDisplay={this.toggleDisplay}\n              addNote={this.addNote}\n              displayNotification={this.displayNotification}\n            />\n            <ListNotes\n              notes={filteredNotes}\n              listDisplay={this.state.listDisplay}\n              toggleList={this.toggleList}\n              searchNotes={this.searchNotes}\n              deleteNote={this.deleteNote}\n              isLoading={this.state.isLoading}\n              editNote={this.editNote}\n              fetchNotes={this.fetchNotes}\n              displayNotification={this.displayNotification}\n            />\n          </main>\n        </>\n      );\n    }\n  }\n}\n\nexport default withAuth0(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={'https://hperezs.github.io/note-taker-app'}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}